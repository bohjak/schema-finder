{
  "description": "Schema for forms definitions.",
  "title": "Forms Schema",
  "type": "object",
  "properties": {
    "id": {
      "description": "The id of the form definition, by which the form is accessible by the FDS. It should consists of tenant and form and application.",
      "pattern": "^.+:.+$",
      "type": "string"
    },
    "tenant": {
      "description": "The tenant should be the same as the DCRM-Broker Backend Tenant.",
      "type": "string"
    },
    "form": {
      "description": "The name for the form (e.g. quote, contact, testdrive, service,...)",
      "type": "string"
    },
    "version": {
      "description": "Version Number.",
      "type": "number"
    },
    "headline": {
      "description": "i18n key or direct value for form's headline",
      "type": "string"
    },
    "subheadline": {
      "description": "i18n key or direct value for form's sub headline",
      "type": "string"
    },
    "object_type": {
      "description": "Value provided by FDS service backend included by default. Does not have any meaning for FORMS FA application.",
      "type": "string"
    },
    "lead_enabled": {
      "description": "Value provided by FDS service backend included by default. Does not have any meaning for FORMS FA application.",
      "type": "boolean"
    },
    "successPage": {
      "description": "DEPRECATED: Use form step with successPage set to true instead.",
      "type": "object",
      "properties": {
        "headline": {
          "description": "i18n key for success page headline",
          "type": "string"
        },
        "content": {
          "description": "i18n key for success page content",
          "type": "string"
        },
        "buttonLabel": {
          "description": "i18n key for success page button label",
          "type": "string"
        },
        "errorMessage": {
          "description": "i18n key for success page error message",
          "type": "string"
        }
      }
    },
    "formStep": {
      "description": "Form step properties.",
      "type": "object",
      "properties": {
        "stepButtonLabel": {
          "description": "i18n key for next button label",
          "type": "string"
        },
        "submitButtonLabel": {
          "description": "i18n key for submit button label",
          "type": "string"
        }
      }
    },
    "configuration": {
      "description": "Configuration properties.",
      "$ref": "#/definitions/FormConfiguration"
    },
    "hiddenValues": {
      "type": "array",
      "items": {
        "anyOf": [
          {
            "$ref": "#/definitions/FDS"
          },
          {
            "$ref": "#/definitions/SessionStorage"
          },
          {
            "$ref": "#/definitions/CustomerData"
          },
          {
            "$ref": "#/definitions/DealerSelectorHiddenValue"
          },
          {
            "$ref": "#/definitions/AppointmentSelectorHiddenValue"
          },
          {
            "$ref": "#/definitions/CarConfigurationHiddenValue"
          },
          {
            "$ref": "#/definitions/MarketingCode"
          }
        ]
      }
    },
    "fields": {
      "description": "The fields, which are containing the elements to be displayed in this form.",
      "type": "array",
      "items": {
        "anyOf": [
          {
            "$ref": "#/definitions/Checkbox"
          },
          {
            "$ref": "#/definitions/FormGroup"
          },
          {
            "$ref": "#/definitions/Input"
          },
          {
            "$ref": "#/definitions/Radio"
          },
          {
            "$ref": "#/definitions/Richtext"
          },
          {
            "$ref": "#/definitions/MarketingConsentText"
          },
          {
            "$ref": "#/definitions/Select"
          },
          {
            "$ref": "#/definitions/AppointmentSelectorSummaryField"
          },
          {
            "$ref": "#/definitions/DealerSelectorSummaryField"
          },
          {
            "$ref": "#/definitions/SummaryField"
          },
          {
            "$ref": "#/definitions/DoubleSelect"
          },
          {
            "$ref": "#/definitions/Textarea"
          },
          {
            "$ref": "#/definitions/DealerSelector"
          },
          {
            "$ref": "#/definitions/AppointmentSelector"
          },
          {
            "$ref": "#/definitions/ModelSelector"
          },
          {
            "$ref": "#/definitions/FormStep"
          }
        ]
      }
    }
  },
  "required": [
    "fields",
    "form",
    "id",
    "tenant"
  ],
  "definitions": {
    "FormConfiguration": {
      "description": "Configuration properties.",
      "type": "object",
      "properties": {
        "tracking": {
          "description": "Tracking.",
          "type": "object",
          "properties": {
            "formType": {
              "description": "Form type used for tracking.",
              "type": "string"
            },
            "formName": {
              "description": "Form name used for tracking.",
              "type": "string"
            }
          }
        },
        "displayMode": {
          "description": "Value provided by FDS service backend. Specify behaiviour of the feature app",
          "type": "string"
        },
        "targetUrl": {
          "description": "Processed opportunities (filled values) from the form will be sent to this URL, if not filled in, default OPS will be used",
          "type": "string"
        },
        "dealerFiltersMapping": {
          "description": "Specifies mapping from car configuration data to dealer filters. Works by specifying key/value pairs of the car configuration object. Nested key/value pairs will be interpreted as logical AND statements (i.e.: {\"carlineId\":{\"01234\":{\"trimName\":{\"abc\":{\"filter\":[\"def\"]}}}}} will apply filter \"def\" only if the selected car configuration has carline id 01234 AND trim name \"abc\".",
          "examples": [
            {
              "carlineId": {
                "30100": {
                  "and": {
                    "salesGroupId": {
                      "30002": {
                        "filter": [
                          "E_SALES"
                        ]
                      }
                    }
                  }
                },
                "30315": {
                  "and": {
                    "salesGroupId": {
                      "30200": {
                        "and": {
                          "trimName": {
                            "gte": {
                              "filter": [
                                "E_SALES"
                              ]
                            }
                          }
                        }
                      },
                      "30205": {
                        "and": {
                          "trimName": {
                            "e-golf": {
                              "filter": [
                                "E_SALES"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "31300": {
                  "and": {
                    "salesGroupId": {
                      "30550": {
                        "and": {
                          "trimName": {
                            "gte": {
                              "filter": [
                                "E_SALES"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "31350": {
                  "and": {
                    "salesGroupId": {
                      "30599": {
                        "and": {
                          "trimName": {
                            "gte": {
                              "filter": [
                                "E_SALES"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "$ref": "#/definitions/DealerFiltersMapping"
        },
        "captcha": {
          "description": "Configuration for hCaptcha. If either key is not supplied or invalid, user verification will be skipped.",
          "type": "object",
          "properties": {
            "siteKey": {
              "description": "Public API key",
              "type": "string"
            },
            "secretKey": {
              "description": "Private API key",
              "type": "string"
            },
            "scoreThreshold": {
              "description": "Cutoff for who is considered a bot.\nFloat 0 <= scoreThreshold <= 1\nRecommended 0.8\nRead more at https://docs.hcaptcha.com/enterprise/scores_and_modes#interpreting-normed-scores",
              "type": "number"
            }
          }
        }
      }
    },
    "DealerFiltersMapping": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/Key"
      }
    },
    "Key": {
      "description": "Key of the car configuration property",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/Value"
      }
    },
    "Value": {
      "description": "Value of the car configuration property",
      "type": "object",
      "properties": {
        "filter": {
          "description": "Array of dealer filters",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "and": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Key"
          }
        }
      }
    },
    "FDS": {
      "description": "Value is set here in FDS",
      "type": "object",
      "properties": {
        "source": {
          "type": "string",
          "enum": [
            "fds"
          ]
        },
        "cid": {
          "description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
          "type": "string"
        },
        "ossPath": {
          "description": "OSS path for the XML.",
          "type": "string"
        },
        "value": {
          "description": "Value posted to the Opportunity Service (OPS)",
          "type": "string"
        }
      },
      "required": [
        "cid",
        "source",
        "value"
      ]
    },
    "SessionStorage": {
      "description": "Value comes from session storage",
      "type": "object",
      "properties": {
        "source": {
          "type": "string",
          "enum": [
            "sessionStorage"
          ]
        },
        "cid": {
          "description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
          "type": "string"
        },
        "ossPath": {
          "description": "OSS path for the XML.",
          "type": "string"
        },
        "key": {
          "description": "Key under which the value is saved in session storage",
          "type": "string"
        },
        "defaultValue": {
          "description": "Value to be sent when there is nothing in the session storage",
          "type": "string"
        }
      },
      "required": [
        "cid",
        "key",
        "source"
      ]
    },
    "CustomerData": {
      "type": "object",
      "properties": {
        "source": {
          "type": "string",
          "enum": [
            "customerData"
          ]
        },
        "cid": {
          "description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
          "type": "string"
        },
        "ossPath": {
          "description": "OSS path for the XML.",
          "type": "string"
        },
        "profileMappingPath": {
          "description": "Path to value in the user profile data model",
          "type": "string"
        },
        "fallbackValue": {
          "description": "Value in case nothing exists under the specified path",
          "type": "string"
        }
      },
      "required": [
        "cid",
        "profileMappingPath",
        "source"
      ]
    },
    "DealerSelectorHiddenValue": {
      "description": "Value is loaded via feature app connector.",
      "type": "object",
      "properties": {
        "source": {
          "type": "string",
          "enum": [
            "dealer-selector"
          ]
        },
        "cidPrefix": {
          "description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
          "type": "string"
        },
        "connectorMapping": {
          "$ref": "#/definitions/DealerSelectorConnectorMapping"
        }
      },
      "required": [
        "connectorMapping",
        "source"
      ]
    },
    "DealerSelectorConnectorMapping": {
      "description": "Dealer selector value mapping from connector",
      "type": "object",
      "properties": {
        "dealerId": {
          "description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
          "$ref": "#/definitions/ConnectorValue"
        },
        "dealerName": {
          "description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
          "$ref": "#/definitions/ConnectorValue"
        },
        "dealerStreet": {
          "description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
          "$ref": "#/definitions/ConnectorValue"
        },
        "dealerPostCode": {
          "description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
          "$ref": "#/definitions/ConnectorValue"
        },
        "dealerCity": {
          "description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
          "$ref": "#/definitions/ConnectorValue"
        },
        "dealerCountry": {
          "description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
          "$ref": "#/definitions/ConnectorValue"
        },
        "dealerEmail": {
          "description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
          "$ref": "#/definitions/ConnectorValue"
        },
        "dealerPhone": {
          "description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
          "$ref": "#/definitions/ConnectorValue"
        },
        "dealerFax": {
          "description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
          "$ref": "#/definitions/ConnectorValue"
        }
      }
    },
    "ConnectorValue": {
      "description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
      "type": "object",
      "properties": {
        "ossPath": {
          "description": "OSS path for the XML.",
          "type": "string"
        },
        "cid": {
          "description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
          "type": "string"
        }
      }
    },
    "AppointmentSelectorHiddenValue": {
      "description": "Value is loaded via feature app connector.",
      "type": "object",
      "properties": {
        "source": {
          "type": "string",
          "enum": [
            "appointment-selector"
          ]
        },
        "cidPrefix": {
          "description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
          "type": "string"
        },
        "connectorMapping": {
          "$ref": "#/definitions/AppointmentSelectorConnectorMapping"
        }
      },
      "required": [
        "connectorMapping",
        "source"
      ]
    },
    "AppointmentSelectorConnectorMapping": {
      "description": "Appointment selector value mapping from connector",
      "type": "object",
      "properties": {
        "date[]": {
          "description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
          "$ref": "#/definitions/ConnectorValue"
        },
        "startTimeSpan[]": {
          "description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
          "$ref": "#/definitions/ConnectorValue"
        },
        "endTimeSpan[]": {
          "description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
          "$ref": "#/definitions/ConnectorValue"
        }
      }
    },
    "CarConfigurationHiddenValue": {
      "description": "Value is loaded via feature app connector.",
      "type": "object",
      "properties": {
        "source": {
          "type": "string",
          "enum": [
            "car-configuration"
          ]
        },
        "cidPrefix": {
          "description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
          "type": "string"
        },
        "connectorMapping": {
          "$ref": "#/definitions/CarConfigurationConnectorMapping"
        }
      },
      "required": [
        "connectorMapping",
        "source"
      ]
    },
    "CarConfigurationConnectorMapping": {
      "description": "Car configuration value mapping from connector",
      "type": "object",
      "properties": {
        "carlineId": {
          "description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
          "$ref": "#/definitions/ConnectorValue"
        },
        "salesGroupId": {
          "description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
          "$ref": "#/definitions/ConnectorValue"
        },
        "trimName": {
          "description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
          "$ref": "#/definitions/ConnectorValue"
        },
        "modelId": {
          "description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
          "$ref": "#/definitions/ConnectorValue"
        },
        "modelYear": {
          "description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
          "$ref": "#/definitions/ConnectorValue"
        },
        "modelVersion": {
          "description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
          "$ref": "#/definitions/ConnectorValue"
        },
        "interiorId": {
          "description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
          "$ref": "#/definitions/ConnectorValue"
        },
        "exteriorId": {
          "description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
          "$ref": "#/definitions/ConnectorValue"
        }
      }
    },
    "MarketingCode": {
      "description": "Marketing code generated from car data",
      "type": "object",
      "properties": {
        "source": {
          "type": "string",
          "enum": [
            "marketingCode"
          ]
        },
        "cid": {
          "description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
          "type": "string"
        },
        "ossPath": {
          "description": "OSS path for the XML.",
          "type": "string"
        },
        "useVictor": {
          "description": "If true, VICTOR will be used to fetch the marketing code instead of VICCI",
          "type": "boolean"
        }
      },
      "required": [
        "cid",
        "source"
      ]
    },
    "Checkbox": {
      "description": "A checkbox allows the user to select one or more options of a limited number of choices. As the input this field has to appear inside a form group.",
      "title": "Checkbox",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "checkbox"
          ]
        },
        "label": {
          "description": "The i18n key or direct translation for the field label.",
          "type": "string"
        },
        "cid": {
          "description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
          "type": "string"
        },
        "ossPath": {
          "description": "OSS path for the XML.",
          "type": "string"
        },
        "required": {
          "description": "Marks the field as mandatory.",
          "type": "boolean"
        },
        "options": {
          "description": "A checkbox group can contain one or more options. As the input this field has to appear inside a form group.",
          "type": "array",
          "items": [
            {
              "$ref": "#/definitions/CheckboxOption"
            }
          ],
          "minItems": 1,
          "additionalItems": {
            "$ref": "#/definitions/CheckboxOption"
          }
        },
        "errorMessage": {
          "description": "The i18n key or direct translation for the errormessage if a validation fails.",
          "type": "string"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/RequiredIf"
              },
              {
                "$ref": "#/definitions/VisibleIf"
              }
            ]
          }
        },
        "tracked": {
          "description": "Marks if the element value should be tracked. If the property is set to false we only track the CID of the element",
          "type": "boolean"
        },
        "prefilled": {
          "description": "How is the field going to be prefilled",
          "anyOf": [
            {
              "$ref": "#/definitions/NoPrefilling"
            },
            {
              "$ref": "#/definitions/FdsPrefilled"
            },
            {
              "$ref": "#/definitions/AuthservicePrefilled"
            }
          ]
        }
      },
      "required": [
        "cid",
        "label",
        "options",
        "type"
      ]
    },
    "CheckboxOption": {
      "type": "object",
      "properties": {
        "label": {
          "description": "The i18n key or direct translation for the field label.",
          "type": "string"
        },
        "value": {
          "description": "The checkbox option value (not displayed).",
          "type": "string"
        },
        "valueUnchecked": {
          "description": "The value to be submitted when the checkbox is NOT checked.",
          "type": "string"
        },
        "preselected": {
          "description": "Preselects the checkbox.",
          "type": "boolean"
        },
        "readonly": {
          "description": "Prevents the user from changing the value.",
          "type": "boolean"
        }
      },
      "required": [
        "label",
        "value"
      ]
    },
    "RequiredIf": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "requiredIf"
          ]
        },
        "cid": {
          "description": "CID of the depended on field.",
          "type": "string"
        },
        "value": {
          "description": "Value of the field depended on, for which this field is going to be required (blank means any value).",
          "type": "string"
        },
        "negate": {
          "description": "If selected the field will be required only if the condition is NOT met",
          "type": "boolean"
        }
      },
      "required": [
        "cid",
        "type"
      ]
    },
    "VisibleIf": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "visibleIf"
          ]
        },
        "cid": {
          "description": "CID of the depended on field.",
          "type": "string"
        },
        "value": {
          "description": "Value of the field depended on, for which this field is going to be visible (blank means any value).",
          "type": "string"
        },
        "negate": {
          "description": "If selected the field will be visible only if the condition is NOT met",
          "type": "boolean"
        }
      },
      "required": [
        "cid",
        "type"
      ]
    },
    "NoPrefilling": {
      "description": "No value will be prefilled",
      "type": "object",
      "properties": {
        "source": {
          "type": "string",
          "enum": [
            "noPrefilling"
          ]
        }
      },
      "required": [
        "source"
      ]
    },
    "FdsPrefilled": {
      "description": "With a value defined here in the form definition",
      "type": "object",
      "properties": {
        "source": {
          "type": "string",
          "enum": [
            "fds"
          ]
        },
        "value": {
          "description": "The field will be prefilled with this value",
          "type": "string"
        }
      },
      "required": [
        "source",
        "value"
      ]
    },
    "AuthservicePrefilled": {
      "description": "With a value taken from the Auth Service",
      "type": "object",
      "properties": {
        "source": {
          "type": "string",
          "enum": [
            "authservice"
          ]
        },
        "profileMappingPath": {
          "description": "Path to value in the user profile data model",
          "type": "string"
        },
        "fallbackValue": {
          "description": "Value in case nothing exists under the specified path",
          "type": "string"
        }
      },
      "required": [
        "profileMappingPath",
        "source"
      ]
    },
    "FormGroup": {
      "description": "Enable group elements and provide specific title for an element group",
      "title": "Form Group",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "form-group"
          ]
        },
        "title": {
          "description": "The i18n key or direct translation for the field title",
          "type": "string"
        },
        "accentuated": {
          "description": "Flag to enable accentuated design",
          "type": "boolean"
        },
        "fields": {
          "description": "Field types that could be grouped",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/Checkbox"
              },
              {
                "$ref": "#/definitions/FormGroup"
              },
              {
                "$ref": "#/definitions/Input"
              },
              {
                "$ref": "#/definitions/Radio"
              },
              {
                "$ref": "#/definitions/Richtext"
              },
              {
                "$ref": "#/definitions/MarketingConsentText"
              },
              {
                "$ref": "#/definitions/Select"
              },
              {
                "$ref": "#/definitions/AppointmentSelectorSummaryField"
              },
              {
                "$ref": "#/definitions/DealerSelectorSummaryField"
              },
              {
                "$ref": "#/definitions/SummaryField"
              },
              {
                "$ref": "#/definitions/DoubleSelect"
              },
              {
                "$ref": "#/definitions/Textarea"
              },
              {
                "$ref": "#/definitions/DealerSelector"
              },
              {
                "$ref": "#/definitions/AppointmentSelector"
              },
              {
                "$ref": "#/definitions/ModelSelector"
              }
            ]
          }
        },
        "dependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VisibleIf"
          }
        }
      },
      "required": [
        "fields",
        "type"
      ]
    },
    "Input": {
      "description": "The input field is the most basic general form element, showing just a simple input field for numbers or strings.",
      "title": "Input",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "input"
          ]
        },
        "label": {
          "description": "The i18n key or direct translation for the field label.",
          "type": "string"
        },
        "cid": {
          "description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
          "type": "string"
        },
        "ossPath": {
          "description": "OSS path for the XML.",
          "type": "string"
        },
        "required": {
          "description": "Marks the field as mandatory.",
          "type": "boolean"
        },
        "defaultSubmitValue": {
          "description": "The default value to be submitted when the user didn't input any value or no value was preselected.",
          "type": "string"
        },
        "errorMessage": {
          "description": "The i18n key or direct translation for the errormessage if a validation fails.",
          "type": "string"
        },
        "inputType": {
          "description": "date, email, url, number",
          "enum": [
            "date",
            "email",
            "number",
            "text",
            "url"
          ],
          "type": "string"
        },
        "pattern": {
          "description": "Regex which has to be entered and will be validated",
          "type": "string"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/RequiredIf"
              },
              {
                "$ref": "#/definitions/VisibleIf"
              }
            ]
          }
        },
        "tracked": {
          "description": "Marks if the element value should be tracked. If the property is set to false we only track the CID of the element",
          "type": "boolean"
        },
        "prefilled": {
          "description": "How is the field going to be prefilled",
          "anyOf": [
            {
              "$ref": "#/definitions/NoPrefilling"
            },
            {
              "$ref": "#/definitions/FdsPrefilled"
            },
            {
              "$ref": "#/definitions/AuthservicePrefilled"
            }
          ]
        }
      },
      "required": [
        "cid",
        "inputType",
        "label",
        "type"
      ]
    },
    "Radio": {
      "description": "The radio group behaves identically to the checkbox group in the form definition. The only difference is, that it has to have a single element in the OSS rather than an array.",
      "title": "Radio Group",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "radio"
          ]
        },
        "label": {
          "description": "The i18n key or direct translation for the field label.",
          "type": "string"
        },
        "cid": {
          "description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
          "type": "string"
        },
        "ossPath": {
          "description": "OSS path for the XML.",
          "type": "string"
        },
        "required": {
          "description": "Marks the field as mandatory.",
          "type": "boolean"
        },
        "defaultSubmitValue": {
          "description": "The default value to be submitted when the user didn't input any value or no value was preselected.",
          "type": "string"
        },
        "options": {
          "description": "A radio group can contain two or more options. As the input this field has to appear inside a form group.",
          "type": "array",
          "items": [
            {
              "$ref": "#/definitions/RadioOption"
            },
            {
              "$ref": "#/definitions/RadioOption"
            }
          ],
          "minItems": 2,
          "additionalItems": {
            "$ref": "#/definitions/RadioOption"
          }
        },
        "errorMessage": {
          "description": "The i18n key or direct translation for the errormessage if a validation fails.",
          "type": "string"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/RequiredIf"
              },
              {
                "$ref": "#/definitions/VisibleIf"
              }
            ]
          }
        },
        "tracked": {
          "description": "Marks if the element value should be tracked. If the property is set to false we only track the CID of the element",
          "type": "boolean"
        },
        "prefilled": {
          "description": "How is the field going to be prefilled",
          "anyOf": [
            {
              "$ref": "#/definitions/NoPrefilling"
            },
            {
              "$ref": "#/definitions/FdsPrefilled"
            },
            {
              "$ref": "#/definitions/AuthservicePrefilled"
            }
          ]
        }
      },
      "required": [
        "cid",
        "label",
        "options",
        "type"
      ]
    },
    "RadioOption": {
      "type": "object",
      "properties": {
        "label": {
          "description": "The i18n key or direct translation for the field label.",
          "type": "string"
        },
        "value": {
          "description": "The i18n key or direct translation for the field radio option value (not displayed).",
          "type": "string"
        },
        "readonly": {
          "description": "Prevents the user from changing the value.",
          "type": "boolean"
        }
      },
      "required": [
        "label",
        "value"
      ]
    },
    "Richtext": {
      "description": "Rich Text is a field type that enables to create text content, supporting various text formats such as bold, italic, links, lists etc.",
      "title": "Form Group Richtext",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "richtext"
          ]
        },
        "target": {
          "description": "Where should the links open (_blank: new tab, _self: in the same tab, _parent: parent browsing context, _top: topmost browsing context).",
          "enum": [
            "_blank",
            "_parent",
            "_self",
            "_top"
          ],
          "type": "string"
        },
        "value": {
          "description": "I18n key for the content of the richtext field.",
          "type": "string"
        },
        "accentuated": {
          "description": "Flag to enable accentuated design (notification bar)",
          "type": "boolean"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VisibleIf"
          }
        }
      },
      "required": [
        "type",
        "value"
      ]
    },
    "MarketingConsentText": {
      "description": "Text field displaying the latest MEV (Marketing Einverständnis Erklärung - Marketing Consent Statement) texts from the IDK (VW Identity Kit)",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "mev-text"
          ]
        },
        "target": {
          "description": "Where should the links open (_blank: new tab, _self: in the same tab, _parent: parent browsing context, _top: topmost browsing context).",
          "enum": [
            "_blank",
            "_parent",
            "_self",
            "_top"
          ],
          "type": "string"
        },
        "mdKey": {
          "description": "Identifier of the MEV text",
          "type": "string"
        },
        "defaultValue": {
          "description": "Displayed in case the MEV text could not be fetched",
          "type": "string"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VisibleIf"
          }
        }
      },
      "required": [
        "mdKey",
        "type"
      ]
    },
    "Select": {
      "description": "A select field is a dropdown field containing different information to be selected by the customer. As the input this field has to appear inside a form group.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "select"
          ]
        },
        "label": {
          "description": "The i18n key or direct translation for the field label.",
          "type": "string"
        },
        "cid": {
          "description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
          "type": "string"
        },
        "ossPath": {
          "description": "OSS path for the XML.",
          "type": "string"
        },
        "placeholder": {
          "description": "The i18n key or direct translation for the field placeholder.",
          "type": "string"
        },
        "required": {
          "description": "Marks the field as mandatory.",
          "type": "boolean"
        },
        "defaultSubmitValue": {
          "description": "The default value to be submitted when the user didn't input any value or no value was preselected.",
          "type": "string"
        },
        "options": {
          "description": "A select field is a dropdown field containing different information to be selected by the customer. As the input this field has to appear inside a form group.",
          "type": "array",
          "items": [
            {
              "$ref": "#/definitions/Option"
            }
          ],
          "minItems": 1,
          "additionalItems": {
            "$ref": "#/definitions/Option"
          }
        },
        "errorMessage": {
          "description": "The i18n key or direct translation for the errormessage if a validation fails.",
          "type": "string"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/RequiredIf"
              },
              {
                "$ref": "#/definitions/VisibleIf"
              }
            ]
          }
        },
        "tracked": {
          "description": "Marks if the element value should be tracked. If the property is set to false we only track the CID of the element",
          "type": "boolean"
        },
        "disabled": {
          "description": "If checked, the field will be displayed as disabled and the user will not be able to interact with it",
          "type": "boolean"
        },
        "prefilled": {
          "description": "How is the field going to be prefilled",
          "anyOf": [
            {
              "$ref": "#/definitions/NoPrefilling"
            },
            {
              "$ref": "#/definitions/FdsPrefilled"
            },
            {
              "$ref": "#/definitions/AuthservicePrefilled"
            }
          ]
        }
      },
      "required": [
        "cid",
        "label",
        "options",
        "placeholder",
        "type"
      ]
    },
    "Option": {
      "type": "object",
      "properties": {
        "label": {
          "description": "The i18n key or direct translation for the displayed option text.",
          "type": "string"
        },
        "value": {
          "description": "The i18n key or direct translation for the option value (not displayed).",
          "type": "string"
        }
      },
      "required": [
        "label",
        "value"
      ]
    },
    "AppointmentSelectorSummaryField": {
      "description": "A summary field that can show information from appointment selector into the form",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "appointment-selector-summary"
          ]
        },
        "label": {
          "description": "I18n key for the markdown label of the summary field. Label can contain %CID% placeholders that will be replaced with values from the form",
          "type": "string"
        },
        "icon": {
          "enum": [
            "calendar",
            "checkmark",
            "close",
            "internet",
            "locate",
            "mail",
            "phone",
            "pin",
            "star-filled"
          ],
          "type": "string"
        },
        "contentConfig": {
          "description": "Provide Feature App Content Config in JSON format",
          "type": "string"
        },
        "target": {
          "description": "Where should the links open (_blank: new tab, _self: in the same tab, _parent: parent browsing context, _top: topmost browsing context).",
          "enum": [
            "_blank",
            "_parent",
            "_self",
            "_top"
          ],
          "type": "string"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VisibleIf"
          }
        }
      },
      "required": [
        "type"
      ]
    },
    "DealerSelectorSummaryField": {
      "description": "A summary field that can show information from dealer selector into the form",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "dealer-selector-summary"
          ]
        },
        "label": {
          "description": "I18n key for the markdown label of the summary field. Label can contain %CID% placeholders that will be replaced with values from the form",
          "type": "string"
        },
        "icon": {
          "enum": [
            "calendar",
            "checkmark",
            "close",
            "internet",
            "locate",
            "mail",
            "phone",
            "pin",
            "star-filled"
          ],
          "type": "string"
        },
        "contentConfig": {
          "description": "Provide Feature App Content Config in JSON format",
          "type": "string"
        },
        "target": {
          "description": "Where should the links open (_blank: new tab, _self: in the same tab, _parent: parent browsing context, _top: topmost browsing context).",
          "enum": [
            "_blank",
            "_parent",
            "_self",
            "_top"
          ],
          "type": "string"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VisibleIf"
          }
        }
      },
      "required": [
        "type"
      ]
    },
    "SummaryField": {
      "description": "A summary field that can show information that has been already entered by the user into the form",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "summary"
          ]
        },
        "label": {
          "description": "I18n key for the markdown label of the summary field. Label can contain %CID% placeholders that will be replaced with values from the form",
          "type": "string"
        },
        "value": {
          "description": "I18n key for the markdown content of the summary field. Value can contain %CID% placeholders that will be replaced with values from the form",
          "type": "string"
        },
        "icon": {
          "enum": [
            "calendar",
            "checkmark",
            "close",
            "internet",
            "locate",
            "mail",
            "phone",
            "pin",
            "star-filled"
          ],
          "type": "string"
        },
        "target": {
          "description": "Where should the links open (_blank: new tab, _self: in the same tab, _parent: parent browsing context, _top: topmost browsing context).",
          "enum": [
            "_blank",
            "_parent",
            "_self",
            "_top"
          ],
          "type": "string"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VisibleIf"
          }
        }
      },
      "required": [
        "type"
      ]
    },
    "DoubleSelect": {
      "description": "A double select field is a dropdown field containing different information to be selected by the customer.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "double-select"
          ]
        },
        "errorMessage": {
          "description": "The i18n key or direct translation for the errormessage if a validation fails.",
          "type": "string"
        },
        "defaultSubmitValue": {
          "description": "The default value to be submitted when the user didn't input any value or no value was preselected.",
          "type": "string"
        },
        "primary": {
          "$ref": "#/definitions/PrimarySelect"
        },
        "secondary": {
          "$ref": "#/definitions/SecondarySelect"
        },
        "options": {
          "description": "A double select option field is a dropdown field containing different information to be selected by the customer.",
          "type": "array",
          "items": [
            {
              "$ref": "#/definitions/DoubleOption"
            }
          ],
          "minItems": 1,
          "additionalItems": {
            "$ref": "#/definitions/DoubleOption"
          }
        },
        "dependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VisibleIf"
          }
        },
        "tracked": {
          "description": "Marks if the element value should be tracked. If the property is set to false we only track the CID of the element",
          "type": "boolean"
        }
      },
      "required": [
        "options",
        "primary",
        "secondary",
        "type"
      ]
    },
    "PrimarySelect": {
      "description": "Configuration for the first select",
      "type": "object",
      "properties": {
        "label": {
          "description": "The i18n key or direct translation for the field label.",
          "type": "string"
        },
        "cid": {
          "description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
          "type": "string"
        },
        "ossPath": {
          "description": "OSS path for the XML.",
          "type": "string"
        },
        "placeholder": {
          "description": "The i18n key or direct translation for the field placeholder.",
          "type": "string"
        },
        "required": {
          "description": "Marks the field as mandatory.",
          "type": "boolean"
        },
        "prefilled": {
          "description": "How is the field going to be prefilled",
          "anyOf": [
            {
              "$ref": "#/definitions/NoPrefilling"
            },
            {
              "$ref": "#/definitions/FdsPrefilled"
            },
            {
              "$ref": "#/definitions/AuthservicePrefilled"
            }
          ]
        }
      },
      "required": [
        "cid",
        "label",
        "placeholder"
      ]
    },
    "SecondarySelect": {
      "description": "Configuration for the second select",
      "type": "object",
      "properties": {
        "label": {
          "description": "The i18n key or direct translation for the field label.",
          "type": "string"
        },
        "cid": {
          "description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
          "type": "string"
        },
        "ossPath": {
          "description": "OSS path for the XML.",
          "type": "string"
        },
        "placeholder": {
          "description": "The i18n key or direct translation for the field placeholder.",
          "type": "string"
        },
        "required": {
          "description": "Marks the field as mandatory.",
          "type": "boolean"
        },
        "prefilled": {
          "description": "How is the field going to be prefilled",
          "anyOf": [
            {
              "$ref": "#/definitions/NoPrefilling"
            },
            {
              "$ref": "#/definitions/FdsPrefilled"
            },
            {
              "$ref": "#/definitions/AuthservicePrefilled"
            }
          ]
        }
      },
      "required": [
        "cid",
        "label",
        "placeholder"
      ]
    },
    "DoubleOption": {
      "type": "object",
      "properties": {
        "label": {
          "description": "The i18n key or direct translation for the displayed option text.",
          "type": "string"
        },
        "value": {
          "description": "The i18n key or direct translation for the option value (not displayed).",
          "type": "string"
        },
        "options": {
          "description": "Options to be displayed in the secondary select when this option is selected in the primary select.",
          "type": "array",
          "items": [
            {
              "$ref": "#/definitions/Option"
            }
          ],
          "minItems": 1,
          "additionalItems": {
            "$ref": "#/definitions/Option"
          }
        }
      },
      "required": [
        "label",
        "options",
        "value"
      ]
    },
    "Textarea": {
      "description": "A textarea field represents a multi-line plain-text editing control, useful when you want to allow users to enter a sizeable amount of free-form text.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "textarea"
          ]
        },
        "label": {
          "description": "The i18n key or direct translation for the field label.",
          "type": "string"
        },
        "cid": {
          "description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
          "type": "string"
        },
        "ossPath": {
          "description": "OSS path for the XML.",
          "type": "string"
        },
        "required": {
          "description": "Marks the field as mandatory.",
          "type": "boolean"
        },
        "errorMessage": {
          "description": "The i18n key or direct translation for the errormessage if a validation fails.",
          "type": "string"
        },
        "pattern": {
          "description": "Regex which has to be entered and will be validated",
          "type": "string"
        },
        "defaultSubmitValue": {
          "description": "The default value to be submitted when the user didn't input any value or no value was preselected.",
          "type": "string"
        },
        "readonly": {
          "description": "Marks the field as read only",
          "type": "boolean"
        },
        "minLength": {
          "description": "Specifies a minimum number of characters that the field is allowed to contain.",
          "type": "number"
        },
        "maxLength": {
          "description": "Specifies a maximum number of characters that the field is allowed to contain.",
          "type": "number"
        },
        "rows": {
          "description": "The number of visible text lines for the control.",
          "type": "number"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/RequiredIf"
              },
              {
                "$ref": "#/definitions/VisibleIf"
              }
            ]
          }
        },
        "tracked": {
          "description": "Marks if the element value should be tracked. If the property is set to false we only track the CID of the element",
          "type": "boolean"
        },
        "prefilled": {
          "description": "How is the field going to be prefilled",
          "anyOf": [
            {
              "$ref": "#/definitions/NoPrefilling"
            },
            {
              "$ref": "#/definitions/FdsPrefilled"
            },
            {
              "$ref": "#/definitions/AuthservicePrefilled"
            }
          ]
        }
      },
      "required": [
        "cid",
        "label",
        "type"
      ]
    },
    "DealerSelector": {
      "type": "object",
      "properties": {
        "cidPrefix": {
          "description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "dealer-selector"
          ]
        },
        "contentConfig": {
          "description": "Provide Feature App Content Config in JSON format",
          "type": "string"
        },
        "connectorMapping": {
          "$ref": "#/definitions/DealerSelectorConnectorMapping"
        }
      },
      "required": [
        "connectorMapping",
        "type"
      ]
    },
    "AppointmentSelector": {
      "type": "object",
      "properties": {
        "cidPrefix": {
          "description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "appointment-selector"
          ]
        },
        "contentConfig": {
          "description": "Provide Feature App Content Config in JSON format",
          "type": "string"
        },
        "connectorMapping": {
          "$ref": "#/definitions/AppointmentSelectorConnectorMapping"
        }
      },
      "required": [
        "connectorMapping",
        "type"
      ]
    },
    "ModelSelector": {
      "type": "object",
      "properties": {
        "cidPrefix": {
          "description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "model-selector"
          ]
        },
        "contentConfig": {
          "description": "Provide Feature App Content Config in JSON format",
          "type": "string"
        },
        "connectorMapping": {
          "$ref": "#/definitions/CarConfigurationConnectorMapping"
        }
      },
      "required": [
        "connectorMapping",
        "type"
      ]
    },
    "FormStep": {
      "description": "Groups form fields into consecutive steps.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "form-step"
          ]
        },
        "title": {
          "description": "Label of a checkmark shown in the next step",
          "type": "string"
        },
        "skipStep": {
          "description": "If is true, this step will be skipped and in the next step a checkmark icon will be shown",
          "type": "boolean"
        },
        "successPage": {
          "type": "boolean"
        },
        "fields": {
          "description": "Fields that can belong to form step.",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/Checkbox"
              },
              {
                "$ref": "#/definitions/FormGroup"
              },
              {
                "$ref": "#/definitions/Input"
              },
              {
                "$ref": "#/definitions/Radio"
              },
              {
                "$ref": "#/definitions/Richtext"
              },
              {
                "$ref": "#/definitions/MarketingConsentText"
              },
              {
                "$ref": "#/definitions/Select"
              },
              {
                "$ref": "#/definitions/AppointmentSelectorSummaryField"
              },
              {
                "$ref": "#/definitions/DealerSelectorSummaryField"
              },
              {
                "$ref": "#/definitions/SummaryField"
              },
              {
                "$ref": "#/definitions/DoubleSelect"
              },
              {
                "$ref": "#/definitions/Textarea"
              },
              {
                "$ref": "#/definitions/DealerSelector"
              },
              {
                "$ref": "#/definitions/AppointmentSelector"
              },
              {
                "$ref": "#/definitions/ModelSelector"
              }
            ]
          }
        }
      },
      "required": [
        "fields",
        "type"
      ]
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#"
}